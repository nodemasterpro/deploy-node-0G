---
- name: Install 0G Storage Node
  hosts: localhost
  become: true

  vars_prompt:
    - name: wallet_name
      prompt: "Enter your wallet name"
      private: false

  vars:
    ZGS_LOG_DIR: "{{ ansible_env.HOME }}/0g-storage-node/run/log"
    ZGS_LOG_CONFIG_FILE: "{{ ansible_env.HOME }}/0g-storage-node/run/log_config"
    LOG_CONTRACT_ADDRESS: "0x8873cc79c5b3b5666535C825205C9a128B1D75F1"
    MINE_CONTRACT: "0x85F6722319538A805ED5733c5F4882d96F1C7384"
    LOG_SYNC_START_BLOCK_NUMBER: 802

  tasks:
    - name: System updates and installation of required environments
      ansible.builtin.apt:
        update_cache: yes
        name:
          - clang
          - cmake
          - build-essential

    - name: Install Rustup
      ansible.builtin.shell: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      args:
        executable: /bin/bash


    - name: Clone the 0G Storage Node repository
      ansible.builtin.git:
        repo: 'https://github.com/0glabs/0g-storage-node.git'
        dest: "{{ ansible_env.HOME }}/0g-storage-node"
        version: "tags/v0.3.3"
        force: yes

    - name: Build the 0G Storage Node
      ansible.builtin.shell: |
        cd {{ ansible_env.HOME }}/0g-storage-node
        git submodule update --init
        sudo apt install -y cargo
        cargo build --release
      args:
        executable: /bin/bash

    - name: Set environment variables in .bash_profile
      ansible.builtin.shell: |
        echo 'export ZGS_LOG_DIR="{{ ZGS_LOG_DIR }}"' >> ~/.bash_profile
        echo 'export ZGS_LOG_CONFIG_FILE="{{ ZGS_LOG_CONFIG_FILE }}"' >> ~/.bash_profile
        echo 'export LOG_CONTRACT_ADDRESS="{{ LOG_CONTRACT_ADDRESS }}"' >> ~/.bash_profile
        echo 'export MINE_CONTRACT="{{ MINE_CONTRACT }}"' >> ~/.bash_profile
        source ~/.bash_profile
      args:
        executable: /bin/bash

    - name: Source profile to ensure 0gchaind is in PATH
      ansible.builtin.shell: |
        source ~/.profile
      args:
        executable: /bin/bash

    - name: Fetch external IP for RPC endpoint
      ansible.builtin.shell: |
        wget -qO- eth0.me
      register: external_ip

    - name: Set BLOCKCHAIN_RPC_ENDPOINT
      set_fact:
        BLOCKCHAIN_RPC_ENDPOINT: "https://0g-rpc.dongqn.com"

    - name: Check if wallet info exists
      stat:
        path: "{{ ansible_env.HOME }}/0gchaind/wallets/{{ wallet_name }}.info"
      register: wallet_info_check

    - name: Fail if wallet info does not exist
      fail:
        msg: "Wallet information file does not exist. Run the create_wallet_0G.yml playbook first."
      when: not wallet_info_check.stat.exists

    - name: Export and store private key
      ansible.builtin.shell: |
        PRIVATE_KEY=$(echo y | 0gchaind keys unsafe-export-eth-key {{ wallet_name }} --keyring-backend test)
        if [ -z "$PRIVATE_KEY" ]; then
          echo "Failed to retrieve the private key."
          exit 1
        fi
        echo $PRIVATE_KEY
      register: private_key_output

    - name: Ensure config.toml exists
      stat:
        path: "{{ ansible_env.HOME }}/0g-storage-node/run/config.toml"
      register: config_toml_check

    - name: Fail if config.toml does not exist
      fail:
        msg: "config.toml file does not exist."
      when: not config_toml_check.stat.exists

    - name: Store private key in config
      ansible.builtin.shell: |
        sed -i 's|miner_key = ""|miner_key = "{{ private_key_output.stdout }}"|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml

    - name: Update config.toml
      ansible.builtin.shell: |
        sed -i 's|# log_config_file = "log_config"|log_config_file = "{{ ZGS_LOG_CONFIG_FILE }}"|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|# log_directory = "log"|log_directory = "{{ ZGS_LOG_DIR }}"|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|mine_contract_address = ".*"|mine_contract_address = "{{ MINE_CONTRACT }}"|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|log_contract_address = ".*"|log_contract_address = "{{ LOG_CONTRACT_ADDRESS }}"|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|blockchain_rpc_endpoint = ".*"|blockchain_rpc_endpoint = "{{ BLOCKCHAIN_RPC_ENDPOINT }}"|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|log_sync_start_block_number = ".*"|log_sync_start_block_number = {{ LOG_SYNC_START_BLOCK_NUMBER }}|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|# network_dir = "network"|network_dir = "network"|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|# network_libp2p_port = 1234|network_libp2p_port = 1234|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|network_boot_nodes = \["/ip4/54.219.26.22/udp/1234/p2p/16Uiu2HAmPxGNWu9eVAQPJww79J32pTJLKGcpjRMb4Qb8xxKkyuG1","/ip4/52.52.127.117/udp/1234/p2p/16Uiu2HAm93Hd5azfhkGBbkx1zero3nYHvfjQYM2NtiW4R3r5bE2g"\]|network_boot_nodes = \["/ip4/54.219.26.22/udp/1234/p2p/16Uiu2HAmTVDGNhkHD98zDnJxQWu3i1FL1aFYeh9wiQTNu4pDCgps","/ip4/52.52.127.117/udp/1234/p2p/16Uiu2HAkzRjxK2gorngB1Xq84qDrT4hSVznYDHj6BkbaE4SGx9oS"\]|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|# db_dir = "db"|db_dir = "db"|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml

    - name: Create systemd service file for 0G Storage Node
      ansible.builtin.template:
        src: templates/zgs-node.service.j2
        dest: /etc/systemd/system/zgs-node.service

    - name: Enable and start ZGS service
      ansible.builtin.systemd:
        name: zgs-node
        enabled: true
        state: started
