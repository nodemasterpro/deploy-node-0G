---
- name: Install 0G Storage Node
  hosts: localhost
  become: true

  vars_prompt:
    - name: wallet_name
      prompt: "Enter your wallet name"
      private: false

  vars:
    ZGS_LOG_DIR: "{{ ansible_env.HOME }}/0g-storage-node/run/log"
    ZGS_LOG_CONFIG_FILE: "{{ ansible_env.HOME }}/0g-storage-node/run/log_config"
    LOG_CONTRACT_ADDRESS: "0xB7e39604f47c0e4a6Ad092a281c1A8429c2440d3"
    MINE_CONTRACT: "0x6176AA095C47A7F79deE2ea473B77ebf50035421"
    LOG_SYNC_START_BLOCK_NUMBER: 401178

  tasks:
    - name: System updates and installation of required environments
      ansible.builtin.apt:
        update_cache: yes
        name:
          - clang
          - cmake
          - build-essential
        state: present

    - name: Install Rustup
      ansible.builtin.shell: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      args:
        executable: /bin/bash

    - name: Install Go
      ansible.builtin.shell: |
        wget https://go.dev/dl/go1.22.0.linux-amd64.tar.gz
        sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.22.0.linux-amd64.tar.gz
        echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.profile
        source ~/.profile
      args:
        executable: /bin/bash

    - name: Clone the 0G Storage Node repository
      ansible.builtin.git:
        repo: 'https://github.com/0glabs/0g-storage-node.git'
        dest: "{{ ansible_env.HOME }}/0g-storage-node"
        version: "v0.3.3"
        force: yes

    - name: Build the 0G Storage Node
      ansible.builtin.shell: |
        cd {{ ansible_env.HOME }}/0g-storage-node
        git submodule update --init
        sudo apt install -y cargo
        cargo build --release
      args:
        executable: /bin/bash

    - name: Ensure config directory exists
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/0g-storage-node/run"
        state: directory

    - name: Check if wallet info exists
      stat:
        path: "{{ ansible_env.HOME }}/0gchaind/wallets/{{ wallet_name }}.info"
      register: wallet_info_check

    - name: Fail if wallet info does not exist
      fail:
        msg: "Wallet information file does not exist. Run the create_wallet_0G.yml playbook first."
      when: not wallet_info_check.stat.exists

    - name: Export and store private key
      ansible.builtin.shell: |
        PRIVATE_KEY=$(echo y | 0gchaind keys unsafe-export-eth-key {{ wallet_name }} --keyring-backend test)
        if [ -z "$PRIVATE_KEY" ]; then
          echo "Failed to retrieve the private key."
          exit 1
        fi
        echo $PRIVATE_KEY
      register: private_key_output

    - name: Fetch external IP for RPC endpoint
      ansible.builtin.shell: |
        wget -qO- eth0.me
      register: external_ip

    - name: Ensure IP is valid
      ansible.builtin.shell: |
        if echo "{{ external_ip.stdout }}" | grep -E -q '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$'; then
          echo "Valid IP address: {{ external_ip.stdout }}"
        else
          echo "Invalid IP address: {{ external_ip.stdout }}"
          exit 1
        fi
      args:
        executable: /bin/bash

    - name: Update config.toml with new values
      ansible.builtin.shell: |
        sed -i 's|log_contract_address = ".*"|log_contract_address = "{{ LOG_CONTRACT_ADDRESS }}"|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|mine_contract_address = ".*"|mine_contract_address = "{{ MINE_CONTRACT }}"|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|blockchain_rpc_endpoint = ".*"|blockchain_rpc_endpoint = "http://127.0.0.1:8545"|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|log_sync_start_block_number = ".*"|log_sync_start_block_number = {{ LOG_SYNC_START_BLOCK_NUMBER }}|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|miner_key = ".*"|miner_key = "{{ private_key_output.stdout }}"|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
        sed -i 's|network_enr_address = ".*"|network_enr_address = "{{ external_ip.stdout }}"|' {{ ansible_env.HOME }}/0g-storage-node/run/config.toml
      args:
        executable: /bin/bash

    - name: Create systemd service file for 0G Storage Node
      ansible.builtin.template:
        src: templates/zgs-node.service.j2
        dest: /etc/systemd/system/zgs-node.service

    - name: Enable and start ZGS service
      ansible.builtin.systemd:
        name: zgs-node
        enabled: true
        state: started

