---
- name: Install 0G Validator Node
  hosts: localhost
  become: true

  vars_prompt:
    - name: moniker
      prompt: "Enter your node name"
      private: false

  vars:
    CHAIN_ID: "zgtendermint_16600-2"
    KEYRING_BACKEND: "os"
    RPC_PORT: "26657"
    SEEDS: "59df4b3832446cd0f9c369da01f2aa5fe9647248@162.55.65.137:27956"
    PERSISTENT_PEERS: "e371f26305869fd8294f6e57dc01ffbbd394a5ac@156.67.80.182:26656,a011565ee54a224c55c023eec938be579c75f00b@144.91.76.149:12656,7da685b1aca1f88dd36f152d2107fc462eceaa83@194.163.146.132:13456,f8e73164ef67ec5288f663b271d320f303832b49@149.102.147.164:12656,3a4612bab7aafd6f57ff857bf83a0fb447a47a75@65.21.114.39:56656,c45a79a6e28fbee2b35b55bc2e18644fe4d20bb8@62.171.131.80:12656,7baa9325f18259079d701d649d22221232dd7a8d@116.202.51.84:26656,dbb44850914d0507e082ea81efd32662f883b222@62.169.26.33:26656,c0cfc7c9d0cab4562e1933adf9fcc62f659f1b78@94.16.105.248:13456,8a35bbc61f8f90786dbbec7e8e1aaffb3d7d7f8c@62.169.31.45:13456,ecd31d198e658512967d964d8b80c1c8cc29a1d4@5.189.182.240:12656,0a827d0e1966731fd8680490601f49e5e9dc7130@158.220.109.21:26656,b517215f5542d9978981d63b7b926f8d70d9c9db@62.171.167.145:12656,a4cc54c65e2f14e1ac28103c816d6e4f8f4f06e0@65.108.6.59:26656,6bbaabdee63367f0a7d7cfb1143b6a160a9094cb@213.199.37.225:26656"
    SNAPSHOT_URL: "https://snapshots-testnet.nodejumper.io/0g-testnet/0g-testnet_latest.tar.lz4"
    HOME_DIR: "{{ ansible_env.HOME }}/.0gchain"
    go_version: "1.22.6"



  tasks:
    - name: Install required packages
      ansible.builtin.apt:
        update_cache: yes
        name:
          - curl
          - snapd
          - git
          - jq
          - build-essential
          - gcc
          - unzip
          - wget
          - lz4

    
    - name: Check if /usr/local/go exists
      stat:
        path: /usr/local/go
      register: go_directory

    - name: Remove /usr/local/go directory if it exists
      file:
        path: /usr/local/go
        state: absent
      when: go_directory.stat.exists

    - name: Download Go archive
      get_url:
        url: "https://golang.org/dl/go{{ go_version }}.linux-amd64.tar.gz"
        dest: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
      register: download_status

    - name: Ensure Go archive was downloaded
      stat:
        path: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
      register: go_archive
      failed_when: not go_archive.stat.exists

    - name: Extract Go archive to /usr/local
      ansible.builtin.unarchive:
        src: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
        dest: /usr/local
        remote_src: yes
      when: go_archive.stat.exists

    - name: Clean up the downloaded Go archive
      file:
        path: "/tmp/go{{ go_version }}.linux-amd64.tar.gz"
        state: absent
      when: go_archive.stat.exists

    - name: Add Go to PATH in .bash_profile if not present
      lineinfile:
        path: /root/.bash_profile
        line: 'export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin'
        create: yes
        state: present

    - name: Source profile for Go (Apply PATH)
      shell: source /root/.bash_profile
      args:
        executable: /bin/bash

    - name: Verify Go installation
      command: /usr/local/go/bin/go version
      register: go_version

    - name: Print Go version
      debug:
        msg: "Installed Go version: {{ go_version.stdout }}"

    - name: Set timezone to UTC
      ansible.builtin.command:
        cmd: timedatectl set-timezone UTC

    - name: Clone 0G chain repository
      ansible.builtin.git:
        repo: 'https://github.com/0glabs/0g-chain.git'
        dest: "{{ ansible_env.HOME }}/0g-chain"
        version: "v0.2.5"
        force: yes

    - name: Run install script
      ansible.builtin.shell: |
        cd {{ ansible_env.HOME }}/0g-chain
        make install
      args:
        executable: /bin/bash

    - name: Source profile
      ansible.builtin.shell: |
        source $HOME/.profile
      args:
        executable: /bin/bash

    - name: Set Chain ID
      ansible.builtin.shell: |
        0gchaind config chain-id {{ CHAIN_ID }}
      args:
        executable: /bin/bash

    - name: Initialize the node
      ansible.builtin.shell: |
        0gchaind init {{ moniker }} --chain-id {{ CHAIN_ID }}
      args:
        executable: /bin/bash

    - name: Set keyring-backend
      ansible.builtin.shell: |
        0gchaind config keyring-backend {{ KEYRING_BACKEND }}
      args:
        executable: /bin/bash   

    - name: Download genesis.json
      ansible.builtin.shell: |
        sudo apt install -y unzip wget
        rm ~/.0gchain/config/genesis.json
        wget -P ~/.0gchain/config https://github.com/0glabs/0g-chain/releases/download/v0.2.3/genesis.json
      args:
        executable: /bin/bash

    - name: Validate genesis file
      ansible.builtin.shell: |
        0gchaind validate-genesis
      args:
        executable: /bin/bash
        
    - name: Add seeds to config.toml
      ansible.builtin.shell: |
        sed -i.bak -e "s/^seeds *=.*/seeds = \"{{ SEEDS }}\"/" {{ ansible_env.HOME }}/.0gchain/config/config.toml
      args:
        executable: /bin/bash

    - name: Add persistent peers to config.toml
      ansible.builtin.shell: |
        sed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \"{{ PERSISTENT_PEERS }}\"/" {{ ansible_env.HOME }}/.0gchain/config/config.toml
      args:
        executable: /bin/bash

    - name: Change ports (Optional)
      ansible.builtin.shell: |
        EXTERNAL_IP=$(wget -qO- eth0.me)
        PROXY_APP_PORT=26658
        P2P_PORT=26656
        PPROF_PORT=6060
        API_PORT=1317
        GRPC_PORT=9092
        GRPC_WEB_PORT=9091
        RPC_PORT=26657
        sed -i \
            -e "s/\(proxy_app = \"tcp:\/\/\)\([^:]*\):\([0-9]*\).*/\1\2:$PROXY_APP_PORT\"/" \
            -e "s/^laddr = \".*/laddr = \"tcp:\/\/0.0.0.0:$RPC_PORT\"/" \
            -e "s/\(pprof_laddr = \"\)\([^:]*\):\([0-9]*\).*/\1localhost:$PPROF_PORT\"/" \
            -e "/\[p2p\]/,/^\[/{s/\(laddr = \"tcp:\/\/\)\([^:]*\):\([0-9]*\).*/\10.0.0.0:$P2P_PORT\"/}" \
            -e "/\[p2p\]/,/^\[/{s/\(external_address = \"\)\([^:]*\):\([0-9]*\).*/\1${EXTERNAL_IP}:$P2P_PORT\"/; t; s/\(external_address = \"\).*/\1${EXTERNAL_IP}:$P2P_PORT\"/}" \
            $HOME/.0gchain/config/config.toml
        sed -i \
            -e "/\[api\]/,/^\[/{s/\(address = \"tcp:\/\/\)\([^:]*\):\([0-9]*\)\(\".*\)/\1\2:$API_PORT\4/}" \
            -e "/\[grpc\]/,/^\[/{s/\(address = \"\)\([^:]*\):\([0-9]*\)\(\".*\)/\1\2:$GRPC_PORT\4/}" \
            -e "/\[grpc-web\]/,/^\[/{s/\(address = \"\)\([^:]*\):\([0-9]*\)\(\".*\)/\1\2:$GRPC_WEB_PORT\4/}" \
            $HOME/.0gchain/config/app.toml
      args:
        executable: /bin/bash

    - name: Configure EVM RPC and WebSocket addresses
      ansible.builtin.shell: |
        sed -i 's/^address = "127.0.0.1:8545"/address = "0.0.0.0:8545"/' {{ ansible_env.HOME }}/.0gchain/config/app.toml
        sed -i 's/^ws-address = "127.0.0.1:8546"/ws-address = "0.0.0.0:8546"/' {{ ansible_env.HOME }}/.0gchain/config/app.toml
      args:
        executable: /bin/bash

    - name: Configure pruning to save storage (Optional)
      ansible.builtin.shell: |
        sed -i \
            -e "s/^pruning *=.*/pruning = \"custom\"/" \
            -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"100\"/" \
            -e "s/^pruning-interval *=.*/pruning-interval = \"10\"/" \
            "$HOME/.0gchain/config/app.toml"
      args:
        executable: /bin/bash

    - name: Set min gas price
      ansible.builtin.shell: |
        sed -i "s/^minimum-gas-prices *=.*/minimum-gas-prices = \"0ua0gi\"/" $HOME/.0gchain/config/app.toml
      args:
        executable: /bin/bash

    - name: Enable indexer (Optional)
      ansible.builtin.shell: |
        sed -i "s/^indexer *=.*/indexer = \"kv\"/" $HOME/.0gchain/config/config.toml
      args:
        executable: /bin/bash

    - name: Ensure fs.inotify.max_user_instances is set to 256
      ansible.builtin.sysctl:
        name: fs.inotify.max_user_instances
        value: 256
        state: present
        reload: yes    

    - name: Increase the limit of open files
      ansible.builtin.lineinfile:
        path: /etc/security/limits.conf
        line: "* soft nofile 65535\n* hard nofile 65535"
        create: yes

    - name: Set DefaultLimitNOFILE in systemd configuration
      ansible.builtin.lineinfile:
        path: /etc/systemd/system.conf
        line: "DefaultLimitNOFILE=65535"
        create: yes

    - name: Set DefaultLimitNOFILE in user systemd configuration
      ansible.builtin.lineinfile:
        path: /etc/systemd/user.conf
        line: "DefaultLimitNOFILE=65535"
        create: yes

    - name: Reload systemd daemon
      ansible.builtin.shell: |
        systemctl daemon-reload
        systemctl restart systemd-logind
      args:
        executable: /bin/bash

    - name: Create systemd service file for 0G Validator Node
      ansible.builtin.template:
        src: templates/0gd-node.service.j2
        dest: /etc/systemd/system/0gd-node.service

    - name: Enable and start 0G Validator Node service
      ansible.builtin.systemd:
        name: 0gd-node
        enabled: true
        state: started

    #- name: Download latest snapshot
    #  ansible.builtin.get_url:
    #    url: "{{ SNAPSHOT_URL }}"
    #    dest: "{{ ansible_env.HOME }}/latest_snapshot.tar.lz4"

    #- name: Stop 0G Validator Node service
    #  ansible.builtin.systemd:
    #    name: 0gd-node
    #    state: stopped    

    #- name: Backup priv_validator_state.json
    #  ansible.builtin.shell: |
    #    cp {{ HOME_DIR }}/data/priv_validator_state.json {{ HOME_DIR }}/priv_validator_state.json.backup
    #  args:
    #    executable: /bin/bash

    #- name: Reset tendermint state
    #  ansible.builtin.shell: |
    #    0gchaind tendermint unsafe-reset-all --home {{ HOME_DIR }} --keep-addr-book
    #  args:
    #    executable: /bin/bash

    #- name: Extract snapshot
    #  ansible.builtin.shell: |
    #    lz4 -d -c {{ ansible_env.HOME }}/latest_snapshot.tar.lz4 | tar -xf - -C {{ HOME_DIR }}
    #  args:
    #    executable: /bin/bash

    #- name: Restore priv_validator_state.json
    #  ansible.builtin.shell: |
    #    mv {{ HOME_DIR }}/priv_validator_state.json.backup {{ HOME_DIR }}/data/priv_validator_state.json
    #  args:
    #    executable: /bin/bash

    #- name: start 0G Validator Node service
    #  ansible.builtin.systemd:
    #    name: 0gd-node
    #    state: started


