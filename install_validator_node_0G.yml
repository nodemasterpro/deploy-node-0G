---
- name: Install 0G Validator Node
  hosts: localhost
  become: true

  vars_prompt:
    - name: moniker
      prompt: "Enter your node name"
      private: false

  vars:
    CHAIN_ID: "zgtendermint_16600-2"
    KEYRING_BACKEND: "os"
    GO_VERSION: "1.21.3"
    OG_VERSION: "v0.4.0"
    OG_PORT: "47"
    OG_HOME: "{{ ansible_env.HOME }}/.0gchain"
    SEEDS: "8f21742ea5487da6e0697ba7d7b36961d3599567@og-testnet-seed.itrocket.net:47656"
    PEERS: "80fa309afab4a35323018ac70a40a446d3ae9caf@og-testnet-peer.itrocket.net:11656,5c8426b14ff9cb62f10100de54f1d134a477105d@65.21.198.58:26656,4e7e6e9a3bc116612644d11b43c9b32b4003bb2c@37.27.128.102:26656"
    SNAPSHOT_URL: "https://server-5.itrocket.net/testnet/og/og_2024-11-01_1751615_snap.tar.lz4"
    GENESIS_URL: "https://server-5.itrocket.net/testnet/og/genesis.json"
    ADDRBOOK_URL: "https://server-5.itrocket.net/testnet/og/addrbook.json"

  tasks:
    - name: Install required packages
      apt:
        update_cache: yes
        name:
          - curl
          - git
          - jq
          - lz4
          - wget
          - build-essential
        state: present

    - name: Install Go
      block:
        - name: Download Go
          get_url:
            url: "https://golang.org/dl/go{{ GO_VERSION }}.linux-amd64.tar.gz"
            dest: "/tmp/go{{ GO_VERSION }}.linux-amd64.tar.gz"

        - name: Remove existing Go installation
          file:
            path: /usr/local/go
            state: absent

        - name: Extract Go
          unarchive:
            src: "/tmp/go{{ GO_VERSION }}.linux-amd64.tar.gz"
            dest: /usr/local
            remote_src: yes

        - name: Add Go to PATH
          lineinfile:
            path: "{{ ansible_env.HOME }}/.bash_profile"
            line: 'export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin'
            create: yes

        - name: Create go/bin directory
          file:
            path: "{{ ansible_env.HOME }}/go/bin"
            state: directory

    - name: Download and install 0G binary
      block:
        - name: Download 0G binary
          get_url:
            url: "https://github.com/0glabs/0g-chain/releases/download/{{ OG_VERSION }}/0gchaind-linux-{{ OG_VERSION }}"
            dest: "{{ ansible_env.HOME }}/0gchaind"
            mode: '0755'

        - name: Move binary to go/bin
          copy:
            src: "{{ ansible_env.HOME }}/0gchaind"
            dest: "{{ ansible_env.HOME }}/go/bin/0gchaind"
            mode: '0755'
            remote_src: yes

    - name: Initialize and configure node
      block:
        - name: Configure node
          shell: |
            0gchaind config node tcp://localhost:{{ OG_PORT }}657
            0gchaind config keyring-backend {{ KEYRING_BACKEND }}
            0gchaind config chain-id {{ CHAIN_ID }}
          environment:
            PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin"

        - name: Initialize node
          shell: |
            0gchaind init "{{ moniker }}" --chain-id {{ CHAIN_ID }}
          environment:
            PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin"

    - name: Download genesis and addrbook
      block:
        - name: Download genesis.json
          get_url:
            url: "{{ GENESIS_URL }}"
            dest: "{{ OG_HOME }}/config/genesis.json"

        - name: Download addrbook.json
          get_url:
            url: "{{ ADDRBOOK_URL }}"
            dest: "{{ OG_HOME }}/config/addrbook.json"

    - name: Configure node settings
      block:
        - name: Set seeds and peers
          shell: |
            sed -i -e "/^\[p2p\]/,/^\[/{s/^[[:space:]]*seeds *=.*/seeds = \"{{ SEEDS }}\"/}" \
                   -e "/^\[p2p\]/,/^\[/{s/^[[:space:]]*persistent_peers *=.*/persistent_peers = \"{{ PEERS }}\"/}" {{ OG_HOME }}/config/config.toml

        - name: Set custom ports in app.toml
          shell: |
            sed -i.bak -e "s%:1317%:{{ OG_PORT }}317%g;
            s%:8080%:{{ OG_PORT }}080%g;
            s%:9090%:{{ OG_PORT }}090%g;
            s%:9091%:{{ OG_PORT }}091%g;
            s%:8545%:{{ OG_PORT }}545%g;
            s%:8546%:{{ OG_PORT }}546%g;
            s%:6065%:{{ OG_PORT }}065%g" {{ OG_HOME }}/config/app.toml

        - name: Set custom ports in config.toml
          shell: |
            external_ip=$(wget -qO- eth0.me)
            sed -i.bak -e "s%:26658%:{{ OG_PORT }}658%g;
            s%:26657%:{{ OG_PORT }}657%g;
            s%:6060%:{{ OG_PORT }}060%g;
            s%:26656%:{{ OG_PORT }}656%g;
            s%^external_address = \"\"%external_address = \"$external_ip:{{ OG_PORT }}656\"%;
            s%:26660%:{{ OG_PORT }}660%g" {{ OG_HOME }}/config/config.toml

        - name: Configure pruning and other settings
          shell: |
            sed -i -e "s/^pruning *=.*/pruning = \"custom\"/" {{ OG_HOME }}/config/app.toml
            sed -i -e "s/^pruning-keep-recent *=.*/pruning-keep-recent = \"100\"/" {{ OG_HOME }}/config/app.toml
            sed -i -e "s/^pruning-interval *=.*/pruning-interval = \"50\"/" {{ OG_HOME }}/config/app.toml
            sed -i 's|minimum-gas-prices =.*|minimum-gas-prices = "0ua0gi"|g' {{ OG_HOME }}/config/app.toml
            sed -i -e "s/prometheus = false/prometheus = true/" {{ OG_HOME }}/config/config.toml
            sed -i -e "s/^indexer *=.*/indexer = \"null\"/" {{ OG_HOME }}/config/config.toml

    - name: Create and configure systemd service
      template:
        src: templates/0gd-node.service.j2
        dest: /etc/systemd/system/0gchaind.service

    - name: Reset and download snapshot
      block:
        - name: Reset node
          shell: |
            0gchaind tendermint unsafe-reset-all --home {{ OG_HOME }}
          environment:
            PATH: "{{ ansible_env.PATH }}:/usr/local/go/bin:{{ ansible_env.HOME }}/go/bin"

        - name: Download and extract snapshot
          shell: |
            curl {{ SNAPSHOT_URL }} | lz4 -dc - | tar -xf - -C {{ OG_HOME }}
          ignore_errors: yes

    - name: Start service
      systemd:
        name: 0gchaind
        enabled: yes
        state: restarted
        daemon_reload: yes


